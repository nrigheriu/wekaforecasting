//HashMap<Integer, Float> map = new HashMap<Integer, Float>();
            //map = getRankedList(forecaster, 96, map);

            //second lag part
            WekaForecaster forecaster2 = new WekaForecaster();
            forecaster2.setFieldsToForecast(data.attribute(1).name());
            //forecaster.setOptions(weka.core.Utils.splitOptions("-F passenger_numbers -G Date -quarter -month -W \"weka.classifiers.meta.AttributeSelectedClassifier " + "-W weka.classifiers.functions.LinearRegression\" -prime 12\""));
            forecaster2.setBaseForecaster(classifier);
            forecaster2.getTSLagMaker().setTimeStampField(data.attribute(0).name()); // date time stamp
            forecaster2.getTSLagMaker().setMinLag(97);
            forecaster2.getTSLagMaker().setMaxLag(192);
            forecaster2.buildForecaster(data, System.out);
            /*map = getRankedList(forecaster2, 96, map);
            map = sortHashMapByValues(map);
            Set<Integer> mapKeys = map.keySet();
            String combinedFeatures = "";
            int j = 1;
            for(Integer key:mapKeys){
                if(j >= 90)
                    break;
                System.out.println(key + " " + map.get(key));
                combinedFeatures += String.valueOf(key) + ", ";
                j++;
            }
            System.out.println(combinedFeatures);*/
